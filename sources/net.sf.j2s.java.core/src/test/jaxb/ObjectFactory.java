//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.09.28 at 12:18:54 PM BST 
//


package test.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the jalview.xml.binding.jalview package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

	// note that these methods are only for the developer -- 
	// they are not used by the marshaller or unmarshaller
	
    private final static QName _Root_FIELD_QNAME = new QName("root.field", "RootF");
    private final static QName _Root_ORDERED_QNAME = new QName("root.ordered", "RootO");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: jalview.xml.binding.jalview
     * 
     */
    public ObjectFactory() { 
    }

    public Root_ORDERED createRootOrdered() {
        return new Root_ORDERED();
    }


    @XmlElementDecl(namespace="root.ordered", name="RootO")
    public JAXBElement<Root_ORDERED> createRootOrdered(Root_ORDERED value) {
    	// the qname here replaces the QName in the file's rootElement annotation
    	// but note that if we change this here, unmarshalling will fail in Java and JavaScript
        return new JAXBElement<Root_ORDERED>(_Root_ORDERED_QNAME, Root_ORDERED.class, null, value);
    }

    @XmlElementDecl(namespace="root.field", name="RootF")
    public JAXBElement<Root_FIELD> createRootField(Root_FIELD value) {
    	// the qname here replaces the QName in the file's rootElement annotation
    	// but note that if we change this here, unmarshalling will fail in Java and JavaScript
        return new JAXBElement<Root_FIELD>(_Root_FIELD_QNAME, Root_FIELD.class, null, value);
    }

}
